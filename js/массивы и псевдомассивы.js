const arr = [1, 2, 3, 6, 8];



// Метод pop()

// arr.pop(); // Удаляет последний элемент из массива
// console.log(arr);
// console.log(arr.pop()); // Выведет последний элемент массива в консоль
// console.log(arr); // [1, 2, 3]



// Метод push()

arr.push(10); // добавляет элемент в конец массива
console.log(arr); // [ 1, 2, 3, 6, 10 ]



// Перебор элементов внутри массива

for (let i = 0; i < arr.length; i++) { // Будет отрпабатывать, пока не закончатся элементы внутри массива
    console.log(arr[i]); // Выведет элементы из массива по очереди
}



for (let value of arr) {
    console.log(value); // Выведет элементы из массива по очереди. Тут можно испольховать break и continue
}



// Свойство lenght 

arr[99] = 0; // добавим в массив 0 с индексом 99
console.log(arr.length); // Получим 100, но почему? Потому что свойство lenght состоит из (последнего индекса + 1)
console.log(arr); // [ 1, 2, 3, 6, 8, 10, <93 empty items>, 0 ] так делать не стоит



// ForEach - выполняет функцию каждый раз для КАЖДОГО элемента массива по очереди

// 1 Аргумент принимает на себя значение элемента. Его можно будет использовать прямо внутри функции
// 2 Аргумент принимает на себя номер по порядку
// 3 Аргумент - ссылка на массив, который перебираем

arr.forEach(function (item, i, arr) { // Callback-функция
    console.log(`${i}: ${item} внутри массива ${arr}`); // Номер по порядку, значение элемента в массиве внутри массива такого-то. Посмотри в консоли что получится
}); // гибко перебирает все элементы внутри массива



// Метод .map() - может перебрать каждый элемент массива, но при этом его модифицировать. В конце он вернет новый массив с модицифированными элементами
// Метод .filter() - фильтрует элементы массива по какому-либо принципу. Например, если нужно оставить только четные элементы массива



// Метод .split() превращает строку в массив, черех разделитель. Если хотим разделить 321, то в качестве S-аргумента ставим просто ('')

const str = prompt('', '');
const products = str.split(", "); // Указываем, через какой разделитель будут товары в строке
console.log(products); // Если ввести аоалоп, лплпа, алдвлмдл, адладлд, то он образует массив со значениями [0: аоалоп, 1: лплпа]  и тд
products.sort(); // Метод, который всегда сортирует элементы по порядку, как строки
console.log(products.join('; ')); // Склеивает массив в строку. Аргумент - разделитель, через который элементы массива будут выводиться в консоль


// Сортировка массива

const twoArr = [2, 13, 26, 8, 10];
console.log(twoArr.sort()); // выведет  [ 10, 13, 2, 26, 8 ]. Посколько сортирует как строки
console.log(twoArr.sort(compareNum)); // выведет  [ 2, 8, 10, 13, 26 ]. Посколько будет сортировать по алгоритму быстрой сортировки


function compareNum(a, b) {
    return a - b;
}



// Псевдомассив не имеет никаких матодов. Просто структура, которая хранит данные по порядку